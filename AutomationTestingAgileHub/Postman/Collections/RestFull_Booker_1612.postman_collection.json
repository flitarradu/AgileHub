{
	"info": {
		"_postman_id": "665ba759-aafb-4a05-9f94-40662f2af9d7",
		"name": "RestFull_Booker_1612",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();\r",
							"pm.globals.set('bookingId', response.bookingid);\r",
							"\r",
							"\r",
							"pm.test(\"Validate a booking has been created\", () => {\r",
							"    pm.expect(response.booking.firstname).eql(\"Radu\");\r",
							"    pm.expect(response.booking.lastname).eql(\"Flitar\");\r",
							"    pm.expect(response.booking.totalprice).eql(1234533);\r",
							"    pm.expect(response.booking.additionalneeds).eql(\"Breakfast\");  \r",
							"    pm.expect(response.booking).exist;\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Radu\",\r\n    \"lastname\" : \"Flitar\",\r\n    \"totalprice\" : 1234533,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2020-12-01\",\r\n        \"checkout\" : \"2020-12-25\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/booking",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking"
					]
				},
				"description": "Validate that user can create a booking"
			},
			"response": []
		},
		{
			"name": "GetBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();\r",
							"\r",
							"let my_booking = pm.globals.get('bookingId');\r",
							"pm.test(\"Validated values for my booking \" + my_booking, () => {\r",
							"    pm.expect(response.firstname).eql(\"Radu\");\r",
							"    pm.expect(response.lastname).eql(\"Flitar\");\r",
							"    pm.expect(response.totalprice).eql(1234533);\r",
							"    pm.expect(response.additionalneeds).eql(\"Breakfast\");  \r",
							"    pm.expect(response).exist;\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/booking/{{bookingId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				},
				"description": "Validate that a booking created can be retrieved"
			},
			"response": []
		},
		{
			"name": "GetToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();\r",
							"pm.globals.set('token', response.token);\r",
							"\r",
							"let myToken = pm.globals.get('token');\r",
							"pm.test(\"Validate token has been created\", () => {\r",
							"    pm.expect(response.token).to.be.eql(myToken);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/auth",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"auth"
					]
				},
				"description": "Get token in order to execute delete/update"
			},
			"response": []
		},
		{
			"name": "DeleteCreatedBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.text();\r",
							"\r",
							"pm.test(\"Validate user can delete booking with id \".concat(pm.globals.get('bookingId')), () => {\r",
							"    pm.expect(response).to.be.eql(\"Created\");\r",
							"} )"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/booking/{{bookingId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				},
				"description": "Validate that a created booking has been deleted"
			},
			"response": []
		}
	]
}